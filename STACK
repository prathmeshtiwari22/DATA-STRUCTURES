CODE :


#include<stdio.h>
#include<stdlib.h>
#define Size 4
 
int Top=-1, stack[Size];
void Push();
void Pop();
void display();
void peek();
 
int main()
{
int choice;
while(1)
{
printf("\nOperations performed by Stack");
printf("\n1.Push the element\n2.Pop the element\n3.display\n4.Peek\n5.End");
printf("\n\nEnter the choice:");
scanf("%d",&choice);

switch(choice)
{
case 1: Push();
break;
case 2: Pop();
break;
case 3: display();
break;
case 4: peek();
       break;
case 5: exit(0);

default: printf("\nInvalid choice!!");
}
}
}
 
void Push()
{
int x;

if(Top==Size-1)
{
printf("\nOverflow!!");
}
else
{
printf("\nEnter element to be inserted to the stack:");
scanf("%d",&x);
Top=Top+1;
stack[Top]=x;
}
}
 
void Pop()
{
if(Top==-1)
{
printf("\nUnderflow!!");
}
else
{
printf("\nPopped element:  %d",stack[Top]);
Top=Top-1;
}
}
 
void display()
{


if(Top==-1)
{
printf("\nUnderflow!!");
}
else
{
printf("\nElements present in the stack: \n");
for(int i=Top;i>=0;--i)
printf("%d\n",stack[i]);
}
}
void peek(){
    printf("the peek element is %d\n",stack[Top]);
}


OUTPUT:


1.Push
2.Pop
3.Display
4.Peek
5.End    1
Enter element:2
1.Push
2.Pop
3.Display
4.Peek
5.End    1
Enter element:3
1.Push
2.Pop
3.Display
4.Peek
5.End    3
2       3
1.Push
2.Pop
3.Display
4.Peek
5.End    4
Last element: 8
1.Push
2.Pop
3.Display
4.Peek
5.End    2
Element deleted: 2
1.Push
2.Pop
3.Display
4.Peek
5.End    3
3
1.Push
2.Pop
3.Display
4.Peek
5.End    5
